# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki_vector/messaging/external_interface.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from anki_vector.messaging import behavior_pb2 as anki__vector_dot_messaging_dot_behavior__pb2
from anki_vector.messaging import cube_pb2 as anki__vector_dot_messaging_dot_cube__pb2
from anki_vector.messaging import messages_pb2 as anki__vector_dot_messaging_dot_messages__pb2
from anki_vector.messaging import shared_pb2 as anki__vector_dot_messaging_dot_shared__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki_vector/messaging/external_interface.proto',
  package='Anki.Vector.external_interface',
  syntax='proto3',
  serialized_pb=_b('\n.anki_vector/messaging/external_interface.proto\x12\x1e\x41nki.Vector.external_interface\x1a\x1cgoogle/api/annotations.proto\x1a$anki_vector/messaging/behavior.proto\x1a anki_vector/messaging/cube.proto\x1a$anki_vector/messaging/messages.proto\x1a\"anki_vector/messaging/shared.proto2\x83\x34\n\x11\x45xternalInterface\x12\xa3\x01\n\x0fProtocolVersion\x12\x36.Anki.Vector.external_interface.ProtocolVersionRequest\x1a\x37.Anki.Vector.external_interface.ProtocolVersionResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\"\x14/v1/protocol_version:\x01*\x12x\n\x0b\x44riveWheels\x12\x32.Anki.Vector.external_interface.DriveWheelsRequest\x1a\x33.Anki.Vector.external_interface.DriveWheelsResponse\"\x00\x12~\n\rPlayAnimation\x12\x34.Anki.Vector.external_interface.PlayAnimationRequest\x1a\x35.Anki.Vector.external_interface.PlayAnimationResponse\"\x00\x12\x9f\x01\n\x0eListAnimations\x12\x35.Anki.Vector.external_interface.ListAnimationsRequest\x1a\x36.Anki.Vector.external_interface.ListAnimationsResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x13/v1/list_animations:\x01*\x12o\n\x08MoveHead\x12/.Anki.Vector.external_interface.MoveHeadRequest\x1a\x30.Anki.Vector.external_interface.MoveHeadResponse\"\x00\x12o\n\x08MoveLift\x12/.Anki.Vector.external_interface.MoveLiftRequest\x1a\x30.Anki.Vector.external_interface.MoveLiftResponse\"\x00\x12\xb5\x01\n\x13\x44isplayFaceImageRGB\x12:.Anki.Vector.external_interface.DisplayFaceImageRGBRequest\x1a;.Anki.Vector.external_interface.DisplayFaceImageRGBResponse\"%\x82\xd3\xe4\x93\x02\x1f\"\x1a/v1/display_face_image_rgb:\x01*\x12\x9d\x01\n\x0b\x45ventStream\x12,.Anki.Vector.external_interface.EventRequest\x1a-.Anki.Vector.external_interface.EventResponse\"/\x82\xd3\xe4\x93\x02)\"\x10/v1/event_stream:\x01*Z\x12\x12\x10/v1/event_stream0\x01\x12\x88\x01\n\x0f\x42\x65haviorControl\x12\x36.Anki.Vector.external_interface.BehaviorControlRequest\x1a\x37.Anki.Vector.external_interface.BehaviorControlResponse\"\x00(\x01\x30\x01\x12\xb2\x01\n\x15\x41ssumeBehaviorControl\x12\x36.Anki.Vector.external_interface.BehaviorControlRequest\x1a\x37.Anki.Vector.external_interface.BehaviorControlResponse\"&\x82\xd3\xe4\x93\x02 \"\x1b/v1/assume_behavior_control:\x01*0\x01\x12\xb8\x01\n\x14\x43\x61ncelFaceEnrollment\x12;.Anki.Vector.external_interface.CancelFaceEnrollmentRequest\x1a<.Anki.Vector.external_interface.CancelFaceEnrollmentResponse\"%\x82\xd3\xe4\x93\x02\x1f\"\x1a/v1/cancel_face_enrollment:\x01*\x12\xb8\x01\n\x14RequestEnrolledNames\x12;.Anki.Vector.external_interface.RequestEnrolledNamesRequest\x1a<.Anki.Vector.external_interface.RequestEnrolledNamesResponse\"%\x82\xd3\xe4\x93\x02\x1f\"\x1a/v1/request_enrolled_names:\x01*\x12\xc2\x01\n\x16UpdateEnrolledFaceByID\x12=.Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest\x1a>.Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse\")\x82\xd3\xe4\x93\x02#\"\x1e/v1/update_enrolled_face_by_id:\x01*\x12\xbe\x01\n\x15\x45raseEnrolledFaceByID\x12<.Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest\x1a=.Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse\"(\x82\xd3\xe4\x93\x02\"\"\x1d/v1/erase_enrolled_face_by_id:\x01*\x12\xbd\x01\n\x15\x45raseAllEnrolledFaces\x12<.Anki.Vector.external_interface.EraseAllEnrolledFacesRequest\x1a=.Anki.Vector.external_interface.EraseAllEnrolledFacesResponse\"\'\x82\xd3\xe4\x93\x02!\"\x1c/v1/erase_all_enrolled_faces:\x01*\x12\xa5\x01\n\x0fSetFaceToEnroll\x12\x36.Anki.Vector.external_interface.SetFaceToEnrollRequest\x1a\x37.Anki.Vector.external_interface.SetFaceToEnrollResponse\"!\x82\xd3\xe4\x93\x02\x1b\"\x16/v1/set_face_to_enroll:\x01*\x12\xa8\x01\n\x10\x45nableVisionMode\x12\x37.Anki.Vector.external_interface.EnableVisionModeRequest\x1a\x38.Anki.Vector.external_interface.EnableVisionModeResponse\"!\x82\xd3\xe4\x93\x02\x1b\"\x16/v1/enable_vision_mode:\x01*\x12\x88\x01\n\x08GoToPose\x12/.Anki.Vector.external_interface.GoToPoseRequest\x1a\x30.Anki.Vector.external_interface.GoToPoseResponse\"\x19\x82\xd3\xe4\x93\x02\x13\"\x0e/v1/go_to_pose:\x01*\x12\x98\x01\n\x0c\x44ockWithCube\x12\x33.Anki.Vector.external_interface.DockWithCubeRequest\x1a\x34.Anki.Vector.external_interface.DockWithCubeResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x12/v1/dock_with_cube:\x01*\x12\xa4\x01\n\x0f\x44riveOffCharger\x12\x36.Anki.Vector.external_interface.DriveOffChargerRequest\x1a\x37.Anki.Vector.external_interface.DriveOffChargerResponse\" \x82\xd3\xe4\x93\x02\x1a\"\x15/v1/drive_off_charger:\x01*\x12\xa0\x01\n\x0e\x44riveOnCharger\x12\x35.Anki.Vector.external_interface.DriveOnChargerRequest\x1a\x36.Anki.Vector.external_interface.DriveOnChargerResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\"\x14/v1/drive_on_charger:\x01*\x12\x8f\x01\n\nPhotosInfo\x12\x31.Anki.Vector.external_interface.PhotosInfoRequest\x1a\x32.Anki.Vector.external_interface.PhotosInfoResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\"\x0f/v1/photos_info:\x01*\x12z\n\x05Photo\x12,.Anki.Vector.external_interface.PhotoRequest\x1a-.Anki.Vector.external_interface.PhotoResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\"\t/v1/photo:\x01*\x12\x8a\x01\n\tThumbnail\x12\x30.Anki.Vector.external_interface.ThumbnailRequest\x1a\x31.Anki.Vector.external_interface.ThumbnailResponse\"\x18\x82\xd3\xe4\x93\x02\x12\"\r/v1/thumbnail:\x01*\x12\x93\x01\n\x0b\x44\x65letePhoto\x12\x32.Anki.Vector.external_interface.DeletePhotoRequest\x1a\x33.Anki.Vector.external_interface.DeletePhotoResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/v1/delete_photo:\x01*\x12~\n\rDriveStraight\x12\x34.Anki.Vector.external_interface.DriveStraightRequest\x1a\x35.Anki.Vector.external_interface.DriveStraightResponse\"\x00\x12x\n\x0bTurnInPlace\x12\x32.Anki.Vector.external_interface.TurnInPlaceRequest\x1a\x33.Anki.Vector.external_interface.TurnInPlaceResponse\"\x00\x12{\n\x0cSetHeadAngle\x12\x33.Anki.Vector.external_interface.SetHeadAngleRequest\x1a\x34.Anki.Vector.external_interface.SetHeadAngleResponse\"\x00\x12~\n\rSetLiftHeight\x12\x34.Anki.Vector.external_interface.SetLiftHeightRequest\x1a\x35.Anki.Vector.external_interface.SetLiftHeightResponse\"\x00\x12\xaf\x01\n\x12UserAuthentication\x12\x39.Anki.Vector.external_interface.UserAuthenticationRequest\x1a:.Anki.Vector.external_interface.UserAuthenticationResponse\"\"\x82\xd3\xe4\x93\x02\x1c\"\x17/v1/user_authentication:\x01*\x12\x97\x01\n\x0c\x42\x61tteryState\x12\x33.Anki.Vector.external_interface.BatteryStateRequest\x1a\x34.Anki.Vector.external_interface.BatteryStateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x11/v1/battery_state:\x01*\x12\x97\x01\n\x0cVersionState\x12\x33.Anki.Vector.external_interface.VersionStateRequest\x1a\x34.Anki.Vector.external_interface.VersionStateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x11/v1/version_state:\x01*\x12\x97\x01\n\x0cNetworkState\x12\x33.Anki.Vector.external_interface.NetworkStateRequest\x1a\x34.Anki.Vector.external_interface.NetworkStateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\"\x11/v1/network_state:\x01*\x12\x83\x01\n\x07SayText\x12..Anki.Vector.external_interface.SayTextRequest\x1a/.Anki.Vector.external_interface.SayTextResponse\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/v1/say_text:\x01*\x12\x93\x01\n\x0b\x43onnectCube\x12\x32.Anki.Vector.external_interface.ConnectCubeRequest\x1a\x33.Anki.Vector.external_interface.ConnectCubeResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/v1/connect_cube:\x01*\x12\x9f\x01\n\x0e\x44isconnectCube\x12\x35.Anki.Vector.external_interface.DisconnectCubeRequest\x1a\x36.Anki.Vector.external_interface.DisconnectCubeResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x13/v1/disconnect_cube:\x01*\x12\x9f\x01\n\x0e\x43ubesAvailable\x12\x35.Anki.Vector.external_interface.CubesAvailableRequest\x1a\x36.Anki.Vector.external_interface.CubesAvailableResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\"\x13/v1/cubes_available:\x01*\x12\xa4\x01\n\x0f\x46lashCubeLights\x12\x36.Anki.Vector.external_interface.FlashCubeLightsRequest\x1a\x37.Anki.Vector.external_interface.FlashCubeLightsResponse\" \x82\xd3\xe4\x93\x02\x1a\"\x15/v1/flash_cube_lights:\x01*\x12\xb4\x01\n\x13\x46orgetPreferredCube\x12:.Anki.Vector.external_interface.ForgetPreferredCubeRequest\x1a;.Anki.Vector.external_interface.ForgetPreferredCubeResponse\"$\x82\xd3\xe4\x93\x02\x1e\"\x19/v1/forget_preferred_cube:\x01*\x12\xa8\x01\n\x10SetPreferredCube\x12\x37.Anki.Vector.external_interface.SetPreferredCubeRequest\x1a\x38.Anki.Vector.external_interface.SetPreferredCubeResponse\"!\x82\xd3\xe4\x93\x02\x1b\"\x16/v1/set_preferred_cube:\x01*\x12~\n\rSetCubeLights\x12\x34.Anki.Vector.external_interface.SetCubeLightsRequest\x1a\x35.Anki.Vector.external_interface.SetCubeLightsResponse\"\x00\x12\x8d\x01\n\tAudioFeed\x12\x30.Anki.Vector.external_interface.AudioFeedRequest\x1a\x31.Anki.Vector.external_interface.AudioFeedResponse\"\x19\x82\xd3\xe4\x93\x02\x13\"\x0e/v1/audio_feed:\x01*0\x01\x12\x91\x01\n\nCameraFeed\x12\x31.Anki.Vector.external_interface.CameraFeedRequest\x1a\x32.Anki.Vector.external_interface.CameraFeedResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\"\x0f/v1/camera_feed:\x01*0\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,anki__vector_dot_messaging_dot_behavior__pb2.DESCRIPTOR,anki__vector_dot_messaging_dot_cube__pb2.DESCRIPTOR,anki__vector_dot_messaging_dot_messages__pb2.DESCRIPTOR,anki__vector_dot_messaging_dot_shared__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_EXTERNALINTERFACE = _descriptor.ServiceDescriptor(
  name='ExternalInterface',
  full_name='Anki.Vector.external_interface.ExternalInterface',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=259,
  serialized_end=6918,
  methods=[
  _descriptor.MethodDescriptor(
    name='ProtocolVersion',
    full_name='Anki.Vector.external_interface.ExternalInterface.ProtocolVersion',
    index=0,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_shared__pb2._PROTOCOLVERSIONREQUEST,
    output_type=anki__vector_dot_messaging_dot_shared__pb2._PROTOCOLVERSIONRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\031\"\024/v1/protocol_version:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DriveWheels',
    full_name='Anki.Vector.external_interface.ExternalInterface.DriveWheels',
    index=1,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEWHEELSREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEWHEELSRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PlayAnimation',
    full_name='Anki.Vector.external_interface.ExternalInterface.PlayAnimation',
    index=2,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._PLAYANIMATIONREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._PLAYANIMATIONRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListAnimations',
    full_name='Anki.Vector.external_interface.ExternalInterface.ListAnimations',
    index=3,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._LISTANIMATIONSREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._LISTANIMATIONSRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\030\"\023/v1/list_animations:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='MoveHead',
    full_name='Anki.Vector.external_interface.ExternalInterface.MoveHead',
    index=4,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._MOVEHEADREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._MOVEHEADRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MoveLift',
    full_name='Anki.Vector.external_interface.ExternalInterface.MoveLift',
    index=5,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._MOVELIFTREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._MOVELIFTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DisplayFaceImageRGB',
    full_name='Anki.Vector.external_interface.ExternalInterface.DisplayFaceImageRGB',
    index=6,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DISPLAYFACEIMAGERGBREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DISPLAYFACEIMAGERGBRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\037\"\032/v1/display_face_image_rgb:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='EventStream',
    full_name='Anki.Vector.external_interface.ExternalInterface.EventStream',
    index=7,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_shared__pb2._EVENTREQUEST,
    output_type=anki__vector_dot_messaging_dot_shared__pb2._EVENTRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002)\"\020/v1/event_stream:\001*Z\022\022\020/v1/event_stream')),
  ),
  _descriptor.MethodDescriptor(
    name='BehaviorControl',
    full_name='Anki.Vector.external_interface.ExternalInterface.BehaviorControl',
    index=8,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_behavior__pb2._BEHAVIORCONTROLREQUEST,
    output_type=anki__vector_dot_messaging_dot_behavior__pb2._BEHAVIORCONTROLRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AssumeBehaviorControl',
    full_name='Anki.Vector.external_interface.ExternalInterface.AssumeBehaviorControl',
    index=9,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_behavior__pb2._BEHAVIORCONTROLREQUEST,
    output_type=anki__vector_dot_messaging_dot_behavior__pb2._BEHAVIORCONTROLRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002 \"\033/v1/assume_behavior_control:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='CancelFaceEnrollment',
    full_name='Anki.Vector.external_interface.ExternalInterface.CancelFaceEnrollment',
    index=10,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._CANCELFACEENROLLMENTREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._CANCELFACEENROLLMENTRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\037\"\032/v1/cancel_face_enrollment:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='RequestEnrolledNames',
    full_name='Anki.Vector.external_interface.ExternalInterface.RequestEnrolledNames',
    index=11,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._REQUESTENROLLEDNAMESREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._REQUESTENROLLEDNAMESRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\037\"\032/v1/request_enrolled_names:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='UpdateEnrolledFaceByID',
    full_name='Anki.Vector.external_interface.ExternalInterface.UpdateEnrolledFaceByID',
    index=12,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._UPDATEENROLLEDFACEBYIDREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._UPDATEENROLLEDFACEBYIDRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002#\"\036/v1/update_enrolled_face_by_id:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='EraseEnrolledFaceByID',
    full_name='Anki.Vector.external_interface.ExternalInterface.EraseEnrolledFaceByID',
    index=13,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._ERASEENROLLEDFACEBYIDREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._ERASEENROLLEDFACEBYIDRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\"\"\035/v1/erase_enrolled_face_by_id:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='EraseAllEnrolledFaces',
    full_name='Anki.Vector.external_interface.ExternalInterface.EraseAllEnrolledFaces',
    index=14,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._ERASEALLENROLLEDFACESREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._ERASEALLENROLLEDFACESRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002!\"\034/v1/erase_all_enrolled_faces:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='SetFaceToEnroll',
    full_name='Anki.Vector.external_interface.ExternalInterface.SetFaceToEnroll',
    index=15,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._SETFACETOENROLLREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._SETFACETOENROLLRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\033\"\026/v1/set_face_to_enroll:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='EnableVisionMode',
    full_name='Anki.Vector.external_interface.ExternalInterface.EnableVisionMode',
    index=16,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._ENABLEVISIONMODEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._ENABLEVISIONMODERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\033\"\026/v1/enable_vision_mode:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='GoToPose',
    full_name='Anki.Vector.external_interface.ExternalInterface.GoToPose',
    index=17,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._GOTOPOSEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._GOTOPOSERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\023\"\016/v1/go_to_pose:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DockWithCube',
    full_name='Anki.Vector.external_interface.ExternalInterface.DockWithCube',
    index=18,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DOCKWITHCUBEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DOCKWITHCUBERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\027\"\022/v1/dock_with_cube:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DriveOffCharger',
    full_name='Anki.Vector.external_interface.ExternalInterface.DriveOffCharger',
    index=19,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEOFFCHARGERREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEOFFCHARGERRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\032\"\025/v1/drive_off_charger:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DriveOnCharger',
    full_name='Anki.Vector.external_interface.ExternalInterface.DriveOnCharger',
    index=20,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEONCHARGERREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVEONCHARGERRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\031\"\024/v1/drive_on_charger:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='PhotosInfo',
    full_name='Anki.Vector.external_interface.ExternalInterface.PhotosInfo',
    index=21,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._PHOTOSINFOREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._PHOTOSINFORESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\024\"\017/v1/photos_info:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='Photo',
    full_name='Anki.Vector.external_interface.ExternalInterface.Photo',
    index=22,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._PHOTOREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._PHOTORESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\016\"\t/v1/photo:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='Thumbnail',
    full_name='Anki.Vector.external_interface.ExternalInterface.Thumbnail',
    index=23,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._THUMBNAILREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._THUMBNAILRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\022\"\r/v1/thumbnail:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DeletePhoto',
    full_name='Anki.Vector.external_interface.ExternalInterface.DeletePhoto',
    index=24,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DELETEPHOTOREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DELETEPHOTORESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\025\"\020/v1/delete_photo:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DriveStraight',
    full_name='Anki.Vector.external_interface.ExternalInterface.DriveStraight',
    index=25,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVESTRAIGHTREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._DRIVESTRAIGHTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TurnInPlace',
    full_name='Anki.Vector.external_interface.ExternalInterface.TurnInPlace',
    index=26,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._TURNINPLACEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._TURNINPLACERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetHeadAngle',
    full_name='Anki.Vector.external_interface.ExternalInterface.SetHeadAngle',
    index=27,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._SETHEADANGLEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._SETHEADANGLERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetLiftHeight',
    full_name='Anki.Vector.external_interface.ExternalInterface.SetLiftHeight',
    index=28,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._SETLIFTHEIGHTREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._SETLIFTHEIGHTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UserAuthentication',
    full_name='Anki.Vector.external_interface.ExternalInterface.UserAuthentication',
    index=29,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_shared__pb2._USERAUTHENTICATIONREQUEST,
    output_type=anki__vector_dot_messaging_dot_shared__pb2._USERAUTHENTICATIONRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\034\"\027/v1/user_authentication:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='BatteryState',
    full_name='Anki.Vector.external_interface.ExternalInterface.BatteryState',
    index=30,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._BATTERYSTATEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._BATTERYSTATERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\026\"\021/v1/battery_state:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='VersionState',
    full_name='Anki.Vector.external_interface.ExternalInterface.VersionState',
    index=31,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._VERSIONSTATEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._VERSIONSTATERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\026\"\021/v1/version_state:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='NetworkState',
    full_name='Anki.Vector.external_interface.ExternalInterface.NetworkState',
    index=32,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._NETWORKSTATEREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._NETWORKSTATERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\026\"\021/v1/network_state:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='SayText',
    full_name='Anki.Vector.external_interface.ExternalInterface.SayText',
    index=33,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._SAYTEXTREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._SAYTEXTRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\021\"\014/v1/say_text:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='ConnectCube',
    full_name='Anki.Vector.external_interface.ExternalInterface.ConnectCube',
    index=34,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._CONNECTCUBEREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._CONNECTCUBERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\025\"\020/v1/connect_cube:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DisconnectCube',
    full_name='Anki.Vector.external_interface.ExternalInterface.DisconnectCube',
    index=35,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._DISCONNECTCUBEREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._DISCONNECTCUBERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\030\"\023/v1/disconnect_cube:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='CubesAvailable',
    full_name='Anki.Vector.external_interface.ExternalInterface.CubesAvailable',
    index=36,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._CUBESAVAILABLEREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._CUBESAVAILABLERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\030\"\023/v1/cubes_available:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='FlashCubeLights',
    full_name='Anki.Vector.external_interface.ExternalInterface.FlashCubeLights',
    index=37,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._FLASHCUBELIGHTSREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._FLASHCUBELIGHTSRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\032\"\025/v1/flash_cube_lights:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='ForgetPreferredCube',
    full_name='Anki.Vector.external_interface.ExternalInterface.ForgetPreferredCube',
    index=38,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._FORGETPREFERREDCUBEREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._FORGETPREFERREDCUBERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\036\"\031/v1/forget_preferred_cube:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='SetPreferredCube',
    full_name='Anki.Vector.external_interface.ExternalInterface.SetPreferredCube',
    index=39,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._SETPREFERREDCUBEREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._SETPREFERREDCUBERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\033\"\026/v1/set_preferred_cube:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='SetCubeLights',
    full_name='Anki.Vector.external_interface.ExternalInterface.SetCubeLights',
    index=40,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_cube__pb2._SETCUBELIGHTSREQUEST,
    output_type=anki__vector_dot_messaging_dot_cube__pb2._SETCUBELIGHTSRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AudioFeed',
    full_name='Anki.Vector.external_interface.ExternalInterface.AudioFeed',
    index=41,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._AUDIOFEEDREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._AUDIOFEEDRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\023\"\016/v1/audio_feed:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='CameraFeed',
    full_name='Anki.Vector.external_interface.ExternalInterface.CameraFeed',
    index=42,
    containing_service=None,
    input_type=anki__vector_dot_messaging_dot_messages__pb2._CAMERAFEEDREQUEST,
    output_type=anki__vector_dot_messaging_dot_messages__pb2._CAMERAFEEDRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\024\"\017/v1/camera_feed:\001*')),
  ),
])
_sym_db.RegisterServiceDescriptor(_EXTERNALINTERFACE)

DESCRIPTOR.services_by_name['ExternalInterface'] = _EXTERNALINTERFACE

# @@protoc_insertion_point(module_scope)
